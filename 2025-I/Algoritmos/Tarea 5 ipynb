{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPU7+LC68p6jULysMHKSLDR"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"r5Q0AD93b0oV","executionInfo":{"status":"ok","timestamp":1747052365183,"user_tz":300,"elapsed":1645,"user":{"displayName":"Jaime Darley Angulo Tenorio","userId":"13549444049127037883"}},"outputId":"d2232ac4-a846-43b2-a893-020c19562217"},"outputs":[{"output_type":"stream","name":"stdout","text":["f(n)                            lg n                                   √n  \\\n","Tiempo                                                                      \n","1 segundo              2^100 000 000                    10000000000000000   \n","1 minuto             2^6 000 000 000                 36000000000000000000   \n","1 hora             2^360 000 000 000             129600000000000000000000   \n","1 día            2^8 640 000 000 000           74649599999999998926258176   \n","1 mes          2^259 200 000 000 000        67184639999999998449516806144   \n","1 año        2^3 153 600 000 000 000      9945192960000000256958229643264   \n","1 siglo    2^315 360 000 000 000 000  99451929599999996318586013642391552   \n","\n","f(n)                        n            n lg n         n²      n³  2^n  n!  \n","Tiempo                                                                       \n","1 segundo           100000000           4523071      10000     464   26  11  \n","1 minuto           6000000000         216677120      77459    1817   32  12  \n","1 hora           360000000000       10800938300     600000    7114   38  14  \n","1 día           8640000000000      228957337705    2939387   20520   42  15  \n","1 mes         259200000000000     6102758218454   16099689   63760   47  16  \n","1 año        3153600000000000    68610956750570   56156922  146646   51  17  \n","1 siglo    315360000000000000  6016277763015247  561569229  680668   58  19  \n"]}],"source":["# Importar librerías\n","import pandas as pd\n","import math\n","from math import log2, sqrt, factorial\n","\n","# 1. Definir presupuestos de operaciones (10^8 ops/s)\n","budgets = {\n","    '1 segundo': 1e8,\n","    '1 minuto': 60 * 1e8,\n","    '1 hora': 3600 * 1e8,\n","    '1 día': 86400 * 1e8,\n","    '1 mes': 30 * 86400 * 1e8,\n","    '1 año': 365 * 86400 * 1e8,\n","    '1 siglo': 100 * 365 * 86400 * 1e8\n","}\n","\n","# 2. Función para n·lg n (búsqueda binaria)\n","def max_n_nlogn(budget):\n","    if budget <= 0:\n","        return 0\n","    # cota superior inicial razonable\n","    est = budget / max(log2(budget), 1)\n","    lo, hi = 0, int(est * 2) + 1\n","    while lo < hi:\n","        mid = (lo + hi + 1) // 2\n","        if mid * log2(mid) <= budget:\n","            lo = mid\n","        else:\n","            hi = mid - 1\n","    return lo\n","\n","# 3. Función para n! (incremental)\n","def max_n_factorial(budget):\n","    n = 1\n","    while factorial(n) <= budget:\n","        n += 1\n","    return n - 1\n","\n","# 4. Construir filas para cada f(n)\n","rows = {\n","    'lg n': [],\n","    '√n': [],\n","    'n': [],\n","    'n lg n': [],\n","    'n²': [],\n","    'n³': [],\n","    '2^n': [],\n","    'n!': []\n","}\n","\n","for b in budgets.values():\n","    # lg n  => 2^budget (demasiado grande, expresamos como potencia)\n","    rows['lg n'].append(f\"2^{int(b):,}\".replace(',', ' '))\n","    # √n  => ( √n ≤ budget ) ⇒ n ≤ budget²\n","    rows['√n'].append(int(b**2))\n","    # n  ⇒ n ≤ budget\n","    rows['n'].append(int(b))\n","    # n lg n\n","    rows['n lg n'].append(max_n_nlogn(b))\n","    # n² ⇒ n ≤ √budget\n","    rows['n²'].append(int(sqrt(b)))\n","    # n³ ⇒ n ≤ budget^(1/3)\n","    rows['n³'].append(int(round(b ** (1/3))))\n","    # 2^n ⇒ n ≤ log₂(budget)\n","    rows['2^n'].append(int(math.floor(log2(b))))\n","    # n!\n","    rows['n!'].append(max_n_factorial(b))\n","\n","# 5. Crear DataFrame\n","df = pd.DataFrame(rows, index=budgets.keys())\n","df.index.name = 'Tiempo'\n","df.columns.name = 'f(n)'\n","\n","# 6. Mostrar en pantalla\n","print(df)\n","\n"]}]}